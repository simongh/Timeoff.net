@model IEnumerable< Timeoff.ResultModels.LeaveRequestedResult>
<div class="row">
    @if (!Model.Any())
    {
        <div class="col-md-12 text-muted">
            There are no leave requests yet.
        </div>
    }
    else
    {
        <div class="col-md-12">
            <p class="visible-xs-block"><em class="text-muted">Scroll table horizontally</em></p>
            <div class="table-responsive">
                <table class="table table-hover user-requests-table">
                    <thead>
                        <tr>
                            <th>Dates (from <i class="fa fa-long-arrow-right"></i> to)</th>
                            <th>Type</th>
                            <th>Deducted</th>
                            <th>Approved by</th>
                            <th></th>
                            <th class="col-xs-2">Comment</th>
                            <th><span class="pull-right">Status</span></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="leave-request-row">
                                <td data-tom-leave-dates="1">
                                    <a class="leave-details-summary-trigger" data-leave-id="@item.Id" href="#">
                                        @{
                                            Dates(item);
                                        }
                                    </a>
                                </td>
                                <td>
                                    @item.Type
                                    @if (item.Status == Timeoff.LeaveStatus.PendingRevoke)
                                    {
                                        <br>

                                        @:(pended revoke)
                                    }
                                </td>
                                <td>@item.Days</td>
                                <td class="user-request-table-approver">@item.Approver</td>
                                <td>
                                    @if (item.Status == Timeoff.LeaveStatus.PendingRevoke)
                                    {
                                        <form method="post" asp-controller="Request" asp-action="Revoke">
                                            <input type="hidden" name="id" value="@item.Id">
                                            <button type="submit" class="pull-right btn btn-default btn-xs revoke-btn single-click" title="Revoke leave request. Subject of approval."><i class="fa fa-trash"></i> Revoke</button>
                                        </form>
                                    }
                                    else
                                    {

                                        <form method="post" asp-controller="Request" asp-action="Cancel">
                                            <input type="hidden" value="@item.Id" name="id">
                                            <button type="submit" class="pull-right btn btn-default btn-xs revoke-btn single-click" title="Cancel leave request" value="cancel"><i class="fa fa-trash"></i> Cancel</button>
                                        </form>
                                    }
                                </td>
                                <td>@item.Comment</td>
                                <td>
                                    <span class="pull-right leave-request-row-status">@Status(item.Status)</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@functions {
    public void Dates(Timeoff.ResultModels.LeaveRequestedResult item)
    {
        @item.StartDate.ToString(item.DateFormat) @Part(item.StartPart)
        <i class="fa fa-long-arrow-right"></i>
        @item.EndDate.ToString(item.DateFormat) @Part(item.EndPart)
    }

    public string Part(Timeoff.LeavePart part)
    {
        return part switch
        {
            Timeoff.LeavePart.Morning => "(morning)",
            Timeoff.LeavePart.Afternoon => "(afternoon)",
            _ => ""
        };
    }

    public string Status(Timeoff.LeaveStatus status)
    {
        return status switch
        {
            Timeoff.LeaveStatus.New => "Pending",
            Timeoff.LeaveStatus.Approved => "Approved",
            Timeoff.LeaveStatus.Rejected => "Rejected",
            _ => ""
        };
    }
}